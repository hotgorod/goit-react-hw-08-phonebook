{"version":3,"file":"static/js/919.dff1c4ed.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm..jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts.selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/pages/ContactsPage.jsx"],"sourcesContent":["\nimport React from 'react';\n\nimport { useDispatch} from 'react-redux';\nimport { addContact } from 'redux/contactSlice';\nimport { Box, Button, FormControl, FormLabel, Heading, Input, useColorModeValue } from '@chakra-ui/react';\n\n\nexport const ContactForm = () => {\n const dispatch = useDispatch();\n\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const phone = event.currentTarget.elements.number.value;\n\n    const newContact = {\n      name,\n      phone,\n    }\n    dispatch(addContact(newContact));\n    \n    event.currentTarget.reset();\n  };\n\n  return (\n    <Box\n      rounded={'lg'}\n      bg={useColorModeValue('white', 'gray.700')}\n      boxShadow={'lg'}\n      p={8}\n      mb='24px'\n    >\n      \n      <Heading size=\"lg\" m=\"auto\">\n        Add contacts to your Phonebook\n      </Heading>\n      <form onSubmit={handleAddContact}>\n        <FormControl>\n          <FormLabel>\n            Name\n            <Input type=\"text\" name=\"name\" required />\n          </FormLabel>\n        </FormControl>\n        <FormControl>\n          <FormLabel>\n            Number\n            <Input type=\"tel\" name=\"number\" required />\n          </FormLabel>\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"orange\">\n          Add contact\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListItemText\":\"ContactList_contactListItemText__TAaj4\",\"list\":\"ContactList_list__csErn\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","export const selectItems = state => state.contacts.contacts.items;\nexport const selectItemsIsloading = state => state.contacts.contacts.isLoading;\nexport const selectItemsError = state => state.contacts.contacts.error;\nexport const selectItemsFilter = state => state.contacts.filter;","import { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { deleteContact, fetchContacts } from 'redux/contactSlice';\nimport {\n  selectItems,\n  selectItemsError,\n  selectItemsFilter,\n  selectItemsIsloading,\n} from 'redux/contacts.selectors';\nimport { IconButton } from '@chakra-ui/react';\nimport { HiX } from 'react-icons/hi';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectItemsFilter);\n\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectItemsIsloading);\n  const error = useSelector(selectItemsError);\n\n  const filteredContacts =\n    items !== null &&\n    items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase().trim()));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      {error && (\n        <div>\n          <p>{error}</p>\n        </div>\n      )}\n      <ul className={css.list}>\n        {filteredContacts &&\n          filteredContacts.map(item => {\n            return (\n              <li className={css.contactListItem} key={item.id}>\n                <p className={css.contactListItemText}>\n                  {item.name}: {item.phone}\n                </p>\n                <IconButton\n                  isRound={true}\n                  // variant=\"solid\"\n                  // colorScheme=\"red\"\n                  aria-label=\"Delete\"\n                  fontSize=\"20px\"\n                  icon={<HiX />}\n                  type=\"button\"\n                  onClick={() => handleDeleteContact(item.id)}\n                >\n                  Delete\n                </IconButton>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport { selectItemsFilter } from 'redux/contacts.selectors';\nimport { setFilter } from 'redux/contactSlice';\nimport { Box, FormControl, FormLabel, Heading, Input} from '@chakra-ui/react';\n\n\n\nconst Filter = () => {\n  const filter = useSelector(selectItemsFilter);\n  \n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <Box\n      rounded={'lg'}\n      bg='grey'\n      \n      p={8}\n      color='white'\n    >\n      <Heading size=\"lg\" mb='1'>Find Contact</Heading>\n      <form>\n        <FormControl>\n          <FormLabel>\n            Find contact by name\n            <Input type=\"text\" value={filter} onChange={handleFilter}></Input>\n          </FormLabel>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default Filter;\n","\nimport ContactForm from 'components/ContactForm/ContactForm.';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ContactsPage = () => {\n    const contacts = useSelector(state => state.contacts.contacts);\n\n    const addContactToPhonebook = (contactName, contactNumber) => {\n      const isDuplicate = contacts.some(\n        contact => contact.contactName === contactName\n      );\n\n      if (isDuplicate) {\n        alert('The contact already exist');\n        return;\n      }\n    };\n  return (\n    <div>\n      <ContactForm addContactCallback={addContactToPhonebook} />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","_jsxs","Box","rounded","bg","useColorModeValue","boxShadow","p","mb","children","_jsx","Heading","size","m","onSubmit","event","preventDefault","newContact","name","currentTarget","elements","value","phone","number","addContact","reset","FormControl","FormLabel","Input","type","required","Button","colorScheme","selectItems","state","contacts","items","selectItemsIsloading","isLoading","selectItemsError","error","selectItemsFilter","filter","useSelector","filteredContacts","item","toLowerCase","includes","trim","useEffect","fetchContacts","_Fragment","className","css","map","IconButton","isRound","fontSize","icon","HiX","onClick","contactId","id","deleteContact","color","onChange","_ref","target","setFilter","ContactForm","addContactCallback","contactName","contactNumber","some","contact","alert","Filter","ContactList"],"sourceRoot":""}