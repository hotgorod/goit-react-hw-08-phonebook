{"version":3,"file":"static/js/219.ceee9783.chunk.js","mappings":"gWAmCaA,GAAOC,EAAAA,EAAAA,IAA2B,SAAcC,EAAOC,GAClE,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GACEI,EAAAA,EAAAA,IAAiBJ,GAD8BK,GAAzCC,EAAAA,UAAWC,EAAAA,MAAOC,EAAAA,WAAYC,EAAAA,QAAWJ,EAAAA,EAAAA,GAAAA,EAAAA,IAG3CK,ECvCR,SAAiBC,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,CDgCuBI,CAAQ,CAC3BC,UAAWjB,EAAMO,MACjBW,eAAgBlB,EAAMQ,WACtBW,cAAenB,EAAMS,SAGvB,OACE,SAACW,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACPpB,IAAAA,EACAK,WAAWgB,EAAAA,EAAAA,IAAG,cAAetB,EAAMM,YAC/BI,GACAL,GAAAA,CAAAA,EAAAA,CACJkB,MAAOrB,IAGb,IAEAJ,EAAK0B,YAAc,O,cECnB,G,QA/CiB,WACf,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,KAAM,MAAMF,UACrBG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJC,GAAIC,EAAAA,GACJhB,UAAW,SACXiB,QAAS,CAAEC,KAAM,EAAGC,GAAI,IACxBC,GAAI,CAAEF,KAAM,GAAIC,GAAI,IAAKT,SAAA,EAEzBG,EAAAA,EAAAA,MAACQ,EAAAA,EAAO,CACNC,WAAY,IACZC,SAAU,CAAEL,KAAM,MAAOM,GAAI,MAAOL,GAAI,OACxCM,WAAY,OAAOf,SAAA,CACpB,oBACiBF,EAAAA,EAAAA,KAAA,UAChBA,EAAAA,EAAAA,KAAC3B,EAAI,CAACkC,GAAI,OAAQW,MAAO,SAAShB,SAAC,kBAIrCF,EAAAA,EAAAA,KAAC3B,EAAI,CAAC6C,MAAO,WAAWhB,SAAC,4HAIzBG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJa,UAAW,SACXV,QAAS,EACT3B,MAAO,SACPsC,UAAW,SACXC,SAAU,WAAWnB,SAAA,EAErBF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACLC,YAAa,SAASrB,SAEvB,iBAGDF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACE,QAAS,OAAQD,YAAa,OAAQE,KAAM,KAAKvB,SAAC,gDAQtE,E,0JCnCaW,GAAUvC,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAdC,EAAAA,WAAcD,EAAAA,EAAAA,GAAAA,EAAAA,IAEtB,OACE,SAACe,EAAAA,EAAAA,IAAS+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRlD,IAAAA,EACAK,WAAWgB,EAAAA,EAAAA,IAAG,iBAAkBtB,EAAMM,YAClCD,GAAAA,CAAAA,EAAAA,CACJkB,MAAOrB,IAGb,IAEAoC,EAAQd,YAAc,S","sources":["../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","components/pages/HomePage.jsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import {\n  Box,\n  Heading,\n  Container,\n  Text,\n  Button,\n  Stack,\n\n} from '@chakra-ui/react';\nimport React from 'react';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Container maxW={'3xl'}>\n        <Stack\n          as={Box}\n          textAlign={'center'}\n          spacing={{ base: 8, md: 14 }}\n          py={{ base: 20, md: 36 }}\n        >\n          <Heading\n            fontWeight={600}\n            fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }}\n            lineHeight={'110%'}\n          >\n            Create your own <br />\n            <Text as={'span'} color={'orange'}>\n              Phonebook\n            </Text>\n          </Heading>\n          <Text color={'gray.500'}>\n            Welcome to the Phone Book Application. You can easily manage your\n            contacts here. You can add, delete and find contacts\n          </Text>\n          <Stack\n            direction={'column'}\n            spacing={3}\n            align={'center'}\n            alignSelf={'center'}\n            position={'relative'}\n          >\n            <Button\n              colorScheme={'orange'}\n             \n            >\n              Get Started\n            </Button>\n            <Button variant={'link'} colorScheme={'blue'} size={'sm'}>\n              Log In if you already have account\n            </Button>\n          </Stack>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","chakra","p","cx","__css","displayName","_jsx","_Fragment","children","Container","maxW","_jsxs","Stack","as","Box","spacing","base","md","py","Heading","fontWeight","fontSize","sm","lineHeight","color","direction","alignSelf","position","Button","colorScheme","variant","size","h2"],"sourceRoot":""}