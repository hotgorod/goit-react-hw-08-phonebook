{"version":3,"file":"static/js/365.80795db6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm..jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts.selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"inputText\":\"ContactForm_inputText__pOiDY\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","\nimport React from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch} from 'react-redux';\nimport { addContact } from 'redux/contactSlice';\n\nexport const ContactForm = () => {\n const dispatch = useDispatch();\n\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const phone = event.currentTarget.elements.number.value;\n\n    const newContact = {\n      name,\n      phone,\n    }\n    dispatch(addContact(newContact));\n    \n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleAddContact} className={css.contactForm}>\n        <label>\n          Name\n          <input className={css.inputText} type=\"text\" name=\"name\" required />\n        </label>\n        <label>\n          Number\n          <input className={css.inputText} type=\"tel\" name=\"number\" required />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListItemText\":\"ContactList_contactListItemText__TAaj4\",\"list\":\"ContactList_list__csErn\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","export const selectItems = state => state.contacts.contacts.items;\nexport const selectItemsIsloading = state => state.contacts.contacts.isLoading;\nexport const selectItemsError = state => state.contacts.contacts.error;\nexport const selectItemsFilter = state => state.contacts.filter;","import { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { deleteContact, fetchContacts } from 'redux/contactSlice';\nimport {\n  selectItems,\n  selectItemsError,\n  selectItemsFilter,\n  selectItemsIsloading,\n} from 'redux/contacts.selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectItemsFilter);\n\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectItemsIsloading);\n  const error = useSelector(selectItemsError);\n\n  const filteredContacts =\n    items !== null &&\n    items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase().trim()));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      {error && (\n        <div>\n          <p>{error}</p>\n        </div>\n      )}\n      <ul className={css.list}>\n        {filteredContacts &&\n          filteredContacts.map(item => {\n            return (\n              <li className={css.contactListItem} key={item.id}>\n                <p className={css.contactListItemText}>\n                  {item.name}: {item.phone}\n                </p>\n                <button\n                  className={css.deleteButton}\n                  type=\"button\"\n                  onClick={() => handleDeleteContact(item.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputText\":\"Filter_inputText__cZhKd\"};","import css from './Filter.module.css';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useDispatch } from 'react-redux';\nimport { selectItemsFilter } from 'redux/contacts.selectors';\nimport { setFilter } from 'redux/contactSlice';\n\n\n\nconst Filter = () => {\n  const filter = useSelector(selectItemsFilter);\n  \n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label>\n        Find contacts by name\n        <input\n          className={css.inputText}\n          type=\"text\"\n          value={filter}\n          onChange={handleFilter}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","\nimport ContactForm from 'components/ContactForm/ContactForm.';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ContactsPage = () => {\n    const contacts = useSelector(state => state.contacts.contacts);\n\n    const addContactToPhonebook = (contactName, contactNumber) => {\n      const isDuplicate = contacts.some(\n        contact => contact.contactName === contactName\n      );\n\n      if (isDuplicate) {\n        alert('The contact already exist');\n        return;\n      }\n    };\n  return (\n    <div>\n      <ContactForm addContactCallback={addContactToPhonebook} />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","onSubmit","event","preventDefault","newContact","name","currentTarget","elements","value","phone","number","addContact","reset","className","css","type","required","selectItems","state","contacts","items","selectItemsIsloading","isLoading","selectItemsError","error","selectItemsFilter","filter","useSelector","filteredContacts","item","toLowerCase","includes","trim","useEffect","fetchContacts","map","onClick","contactId","id","deleteContact","onChange","_ref","target","setFilter","ContactForm","addContactCallback","contactName","contactNumber","some","contact","alert","Filter","ContactList"],"sourceRoot":""}