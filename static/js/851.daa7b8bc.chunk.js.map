{"version":3,"file":"static/js/851.daa7b8bc.chunk.js","mappings":"iRAwEA,UAlEqB,WACnB,IAAAA,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,QAAS,KACTC,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BC,UAAW,KACXC,EAAG,EAAEC,SAAA,EAELC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,SAAS,MAAKH,SAAC,mCACxBP,EAAAA,EAAAA,MAAA,QAAMW,SAAUjB,GAdH,SAAAkB,GACfC,QAAQC,IAAIF,GACZd,GAASiB,EAAAA,EAAAA,IAAcH,IACvBjB,GACF,IAU2CY,SAAA,EACrCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAT,UACVP,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAAAV,SAAA,CAAC,UAETC,EAAAA,EAAAA,KAACU,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJC,aAAa,IACT3B,EAAS,QAAS,CAAE4B,UAAU,KAAO,IACzCC,KAAK,WAEN1B,EAAO2B,QAASf,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iCAG3BC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAT,UACVP,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAAAV,SAAA,CAAC,SAETC,EAAAA,EAAAA,KAACU,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJC,aAAa,IACT3B,EAAS,OAAQ,CAAE4B,UAAU,KAAO,IACxCC,KAAK,UAEN1B,EAAO4B,OAAQhB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iCAG1BC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAT,UACVP,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAAAV,SAAA,CAAC,aAETC,EAAAA,EAAAA,KAACU,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJC,aAAa,IACT3B,EAAS,WAAY,CAAE4B,UAAU,EAAMI,UAAW,KAAI,IAC1DH,KAAK,cAEN1B,EAAO8B,WAAYlB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iCAG9BC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACL,KAAK,SAASM,YAAY,SAAQrB,SAAC,iBAMnD,C","sources":["components/pages/RegisterPage.jsx"],"sourcesContent":["import { Box, Button, FormControl, FormLabel, Heading, Input, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/authReducer';\n\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  return (\n    <Box\n      rounded={'lg'}\n      bg={useColorModeValue('white', 'gray.700')}\n      boxShadow={'lg'}\n      p={8}\n    >\n      <Heading fontSize=\"2xl\">Sign Up to create new account</Heading>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl>\n          <FormLabel>\n            Email:\n            <Input\n              defaultValue=\"\"\n              {...register('email', { required: true })}\n              type=\"email\"\n            />\n            {errors.email && <span>This field is required</span>}\n          </FormLabel>\n        </FormControl>\n        <FormControl>\n          <FormLabel>\n            Name:\n            <Input\n              defaultValue=\"\"\n              {...register('name', { required: true })}\n              type=\"text\"\n            />\n            {errors.name && <span>This field is required</span>}\n          </FormLabel>\n        </FormControl>\n        <FormControl>\n          <FormLabel>\n            Password:\n            <Input\n              defaultValue=\"\"\n              {...register('password', { required: true, minLength: 7 })}\n              type=\"password\"\n            />\n            {errors.password && <span>This field is requared</span>}\n          </FormLabel>\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"orange\">\n          Sing Up\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsxs","Box","rounded","bg","useColorModeValue","boxShadow","p","children","_jsx","Heading","fontSize","onSubmit","data","console","log","registerThunk","FormControl","FormLabel","Input","_objectSpread","defaultValue","required","type","email","name","minLength","password","Button","colorScheme"],"sourceRoot":""}